{"ast":null,"code":"export default {\n  name: \"DateUtils\",\n  props: [\"s\"],\n  data() {\n    return {\n      time: {\n        hour: \"\",\n        minitus: \"\",\n        seconds: \"\"\n      },\n      nowTime: \"\",\n      week: [\"星期天\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\"]\n    };\n  },\n  mounted() {\n    this.dateTime();\n  },\n  methods: {\n    dateTime() {\n      this.timeFormate();\n      setTimeout(() => {\n        this.dateTime();\n      }, 1000);\n    },\n    timeFormate() {\n      const newtime = new Date();\n      this.time.hour = this.getIncrease(newtime.getHours(), 2);\n      this.time.minitus = this.getIncrease(newtime.getMinutes(), 2);\n      this.time.seconds = this.getIncrease(newtime.getSeconds(), 2);\n      this.nowTime = this.getIncrease(newtime.getFullYear(), 4) + \"年\" + this.getIncrease(newtime.getMonth() + 1, 2) + \"月\" + this.getIncrease(newtime.getDate(), 2) + \"日 \" + this.week[newtime.getDay()];\n      //this.hour=\n      // return `${this.time.hour}:${this.time.minitus}:${this.time.seconds}`;\n    },\n\n    getIncrease(num, digit) {\n      var increase = \"\";\n      for (var i = 0; i < digit; i++) {\n        increase += \"0\";\n      }\n      return (increase + num).slice(-digit);\n    }\n  }\n};","map":{"version":3,"mappings":"AAcA;EACAA;EACAC;EACAC;IACA;MACAC;QACAC;QACAC;QACAC;MACA;MACAC;MACAC,OACA,OACA,OACA,OACA,OACA,OACA,OACA;IAEA;EACA;EACAC;IACA;EACA;EACAC;IACAC;MACA;MACAC;QACA;MACA;IACA;IACAC;MACA;MACA;MACA;MACA;MACA,eACA,6CACA,MACA,8CACA,MACA,yCACA,OACA;MACA;MACA;IACA;;IACAC;MACA;MACA;QACAC;MACA;MACA;IACA;EACA;AACA","names":["name","props","data","time","hour","minitus","seconds","nowTime","week","mounted","methods","dateTime","setTimeout","timeFormate","getIncrease","increase"],"sourceRoot":"src/components","sources":["DateUtils.vue"],"sourcesContent":["<template>\n  <div style=\"padding: 30px;font-size: 30px;\">\n        <span className=\"time\" id=\"time\">\n            今天是：<span className=\"date\">{{ nowTime }}</span>\n            <span className=\"hour\" style=\"margin-left: 5px;\">{{ time.hour }}</span>\n            <a className=\"split\">:</a>\n            <span className=\"minitus\">{{ time.minitus }}</span>\n            <a className=\"split\">:</a>\n            <span className=\"seconds\">{{ time.seconds }}</span>\n        </span>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"DateUtils\",\n  props: [\"s\"],\n  data() {\n    return {\n      time: {\n        hour: \"\",\n        minitus: \"\",\n        seconds: \"\"\n      },\n      nowTime: \"\",\n      week: [\n        \"星期天\",\n        \"星期一\",\n        \"星期二\",\n        \"星期三\",\n        \"星期四\",\n        \"星期五\",\n        \"星期六\"\n      ]\n    };\n  },\n  mounted() {\n    this.dateTime();\n  },\n  methods: {\n    dateTime() {\n      this.timeFormate();\n      setTimeout(() => {\n        this.dateTime();\n      }, 1000);\n    },\n    timeFormate() {\n      const newtime = new Date();\n      this.time.hour = this.getIncrease(newtime.getHours(), 2);\n      this.time.minitus = this.getIncrease(newtime.getMinutes(), 2);\n      this.time.seconds = this.getIncrease(newtime.getSeconds(), 2);\n      this.nowTime =\n          this.getIncrease(newtime.getFullYear(), 4) +\n          \"年\" +\n          this.getIncrease(newtime.getMonth() + 1, 2) +\n          \"月\" +\n          this.getIncrease(newtime.getDate(), 2) +\n          \"日 \" +\n          this.week[newtime.getDay()];\n      //this.hour=\n      // return `${this.time.hour}:${this.time.minitus}:${this.time.seconds}`;\n    },\n    getIncrease(num, digit) {\n      var increase = \"\";\n      for (var i = 0; i < digit; i++) {\n        increase += \"0\";\n      }\n      return (increase + num).slice(-digit);\n    }\n  }\n}\n</script>\n\n<style scoped>\n.txt-data .time {\n  font-size: 1rem;\n  margin-right: 0.5rem;\n}\n\n.split {\n  animation: shark 1s step-end infinite;\n  vertical-align: center;\n  margin-left: 2px;\n  margin-right: 2px;\n}\n\n@keyframes shark {\n  0%,\n  100% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0;\n  }\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}