{"ast":null,"code":"export default {\n  name: \"GoodsManagement\",\n  data() {\n    return {\n      storageData: [],\n      tableData: [],\n      pageSize: 10,\n      pageNum: 1,\n      total: 0,\n      name: '',\n      //refer v-model里的name\n      centerDialogVisible: false,\n      form: {\n        id: '',\n        name: '',\n        storage: '',\n        goodstype: '',\n        count: '',\n        remark: ''\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: 'Please input  item name',\n          trigger: 'blur'\n        }],\n        count: [{\n          required: true,\n          message: 'Please input volume',\n          trigger: 'blur'\n        }, {\n          pattern: /^([1-9][0-9]*){1,4}$/,\n          message: 'must be positive integer',\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  methods: {\n    formatStorage(row) {\n      let temp = this.storageData.find(item => {\n        return item.id == row.storage;\n      });\n      return temp && temp.name;\n    },\n    resetForm() {\n      this.$refs.form.resetFields();\n    },\n    handleSizeChange(val) {\n      console.log(`${val} items per page`);\n      this.pageNum = 1;\n      this.pageSize = val;\n      this.loadPost();\n    },\n    handleCurrentChange(val) {\n      console.log(`current page: ${val}`);\n      this.pageNum = val;\n      this.loadPost();\n    },\n    resetParam() {\n      this.name = '';\n    },\n    add() {\n      this.centerDialogVisible = true;\n      this.$nextTick(() => {\n        this.resetForm();\n        this.form.id = '';\n      });\n    },\n    mod(row) {\n      this.centerDialogVisible = true;\n      this.$nextTick(() => {\n        this.form.id = row.id;\n        this.form.name = row.name;\n        this.form.storage = row.storage;\n        this.form.goodstype = row.goodstype;\n        this.form.count = row.count;\n        this.form.remark = row.remark;\n      });\n    },\n    del(id) {\n      this.$axios.get(this.$httpUrl + '/goods/del?id=' + id).then(res => res.data).then(res => {\n        console.log(res);\n        if (res.code == 200) {\n          this.$message({\n            message: 'Delete Successed!',\n            type: 'success'\n          });\n          this.loadPost();\n        } else {\n          this.$message({\n            message: 'Operation Failed！',\n            type: 'error'\n          });\n        }\n      });\n    },\n    doSave() {\n      this.$axios.post(this.$httpUrl + '/goods/save', this.form).then(res => res.data).then(res => {\n        console.log(res);\n        if (res.code == 200) {\n          this.$message({\n            message: 'Save Successed!',\n            type: 'success'\n          });\n          this.centerDialogVisible = false;\n          this.loadPost();\n          this.resetForm();\n        } else {\n          this.$message({\n            message: 'Operation Failed！',\n            type: 'error'\n          });\n        }\n      });\n    },\n    doMod() {\n      this.$axios.post(this.$httpUrl + '/goods/update', this.form).then(res => res.data).then(res => {\n        console.log(res);\n        if (res.code == 200) {\n          this.$message({\n            message: 'Save Successed!',\n            type: 'success'\n          });\n          this.centerDialogVisible = false;\n          this.loadPost();\n          this.resetForm();\n        } else {\n          this.$message({\n            message: 'Operation Failed！',\n            type: 'error'\n          });\n        }\n      });\n    },\n    save() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          if (this.form.id) {\n            this.doMod();\n          } else {\n            this.doSave();\n          }\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    loadPost() {\n      this.$axios.post(this.$httpUrl + '/goods/listPageEn', {\n        pageSize: this.pageSize,\n        pageNum: this.pageNum,\n        param: {\n          name: this.name //refer data里的name\n        }\n      }).then(res => res.data).then(res => {\n        console.log(res);\n        if (res.code == 200) {\n          this.tableData = res.data;\n          this.total = res.total;\n        } else {\n          alert(\"Resource Get Failed\");\n        }\n      });\n    },\n    loadStorage() {\n      this.$axios.get(this.$httpUrl + '/storage/list').then(res => res.data).then(res => {\n        console.log(res);\n        if (res.code == 200) {\n          this.storageData = res.data;\n        } else {\n          alert(\"Resource Get Failed\");\n        }\n      });\n    }\n  },\n  beforeMount() {\n    this.loadStorage();\n    this.loadPost();\n  }\n};","map":{"version":3,"mappings":"AAsFA;EACAA;EACAC;IAEA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAN;MAAA;MACAO;MACAC;QACAC;QACAT;QACAU;QACAC;QACAC;QACAC;MACA;MACAC;QACAd,OACA;UAAAe;UAAAC;UAAAC;QAAA,EACA;QACAL,QACA;UAAAG;UAAAC;UAAAC;QAAA,GACA;UAAAC;UAAAF;UAAAC;QAAA;MAEA;IACA;EACA;EACAE;IACAC;MACA;QACA;MACA;MAEA;IACA;IACAC;MACA;IACA;IACAC;MACAC;MACA;MACA;MACA;IACA;IACAC;MACAD;MACA;MACA;IACA;IACAE;MACA;IACA;IACAC;MACA;MACA;QACA;QACA;MACA;IACA;IACAC;MACA;MACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;IACA;IACAC;MACA;QACAL;QACA;UAEA;YACAP;YACAa;UACA;UACA;QACA;UACA;YACAb;YACAa;UACA;QACA;MAEA;IACA;IACAC;MACA;QACAP;QACA;UAEA;YACAP;YACAa;UACA;UACA;UACA;UACA;QACA;UACA;YACAb;YACAa;UACA;QACA;MAEA;IACA;IACAE;MACA;QACAR;QACA;UAEA;YACAP;YACAa;UACA;UACA;UACA;UACA;QACA;UACA;YACAb;YACAa;UACA;QACA;MAEA;IACA;IACAG;MACA;QACA;UACA;YACA;UACA;YACA;UACA;QACA;UACAT;UACA;QACA;MACA;IAEA;IACAU;MACA;QACA7B;QACAC;QACA6B;UACAlC;QACA;MACA;QACAuB;QACA;UACA;UACA;QACA;UACAY;QACA;MAEA;IACA;IACAC;MACA;QACAb;QACA;UACA;QACA;UACAY;QACA;MAEA;IAAA;EACA;EAEAE;IACA;IACA;EACA;AAEA","names":["name","data","storageData","tableData","pageSize","pageNum","total","centerDialogVisible","form","id","storage","goodstype","count","remark","rules","required","message","trigger","pattern","methods","formatStorage","resetForm","handleSizeChange","console","handleCurrentChange","resetParam","add","mod","del","type","doSave","doMod","save","loadPost","param","alert","loadStorage","beforeMount"],"sourceRoot":"src/components/goods","sources":["GoodsManagement.vue"],"sourcesContent":["<template>\n  <div>\n    <div style=\"margin-bottom: 10px;text-align: center\">\n      <el-input v-model=\"name\" placeholder=\"Please enter item name\" suffix-icon=\"el-icon-search\" style=\"width:200px\"\n                @keyup.enter.native=\"loadPost\"></el-input>\n      <el-button type=\"primary\" style=\"margin-left: 10px\" @click=\"loadPost\">Search</el-button>\n      <el-button type=\"success\" @click=\"resetParam\">Reset</el-button>\n\n      <el-button type=\"primary\" style=\"margin-left: 10px\" @click=\"add\">Add</el-button>\n    </div>\n    <el-table :data=\"tableData\"\n              :header-cell-style=\"{ background:'#f2f5f2', color:'#555555'}\"\n              border\n    >\n      <el-table-column prop=\"id\" label=\"ID\" width=\"200\">\n      </el-table-column>\n      <el-table-column prop=\"name\" label=\"Item Name\" width=\"280\">\n      </el-table-column>\n      <el-table-column prop=\"storage\" label=\"Warehouse\" width=\"280\" :formatter=\"formatStorage\">\n      </el-table-column>\n      <el-table-column prop=\"goodsType\" label=\"Classification\" width=\"280\">\n      </el-table-column>\n      <el-table-column prop=\"count\" label=\"Volume\" width=\"280\">\n      </el-table-column>\n      <el-table-column prop=\"remark\" label=\"remark\" width=\"500\">\n      </el-table-column>\n\n      <el-table-column prop=\"operate\" label=\"Operate\" width=\"200\">\n        <template slot-scope=\"scope\">\n          <el-button size=\"mini\" type=\"success\" @click=\"mod(scope.row)\"> Edit</el-button>\n          <el-popconfirm\n              title=\"Are you sure to delete this?\"\n              @confirm=\"del(scope.row.id)\"\n              style=\"margin-left: 5px\"\n          >\n            <!--              confirm 以后才调用del-->\n\n            <el-button slot=\"reference\" size=\"mini\" type=\"danger\" >Delete</el-button>\n          </el-popconfirm>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-pagination\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        :current-page=\"pageNum\"\n        :page-sizes=\"[5, 10, 20,30]\"\n        :page-size=\"pageSize\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\">\n    </el-pagination>\n\n    <el-dialog\n        title=\"Adding account\"\n        :visible.sync=\"centerDialogVisible\"\n        width=\"30%\"\n        center>\n      <el-form ref=\"form\" :rules=\"rules\" :model=\"form\" label-width=\"120px\">\n        <el-form-item label=\"Item Name\" prop=\"name\">\n          <el-input v-model=\"form.name\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Warehouse\" prop=\"name\">\n          <el-input v-model=\"form.storage\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Classification\" prop=\"name\">\n          <el-input v-model=\"form.goodsType\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"volume\" prop=\"name\">\n          <el-input v-model=\"form.count\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"remark\" prop=\"remark\">\n          <el-input type=\"textarea\" v-model=\"form.remark\"></el-input>\n        </el-form-item>\n\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n    <el-button @click=\"centerDialogVisible = false\">Cancel</el-button>\n    <el-button type=\"primary\" @click=\"save\">Confirm</el-button>\n  </span>\n    </el-dialog>\n\n  </div>\n</template>\n\n\n<script>\nexport default {\n  name: \"GoodsManagement\",\n  data() {\n\n    return{\n      storageData:[],\n      tableData: [],\n      pageSize:10,\n      pageNum:1,\n      total:0,\n      name:'',//refer v-model里的name\n      centerDialogVisible:false,\n      form:{\n        id:'',\n        name:'',\n        storage:'',\n        goodstype:'',\n        count:'',\n        remark:''\n      },\n      rules: {\n        name: [\n          {required: true, message: 'Please input  item name', trigger: 'blur'},\n        ],\n        count: [\n          {required: true, message: 'Please input volume', trigger: 'blur'},\n          {pattern: /^([1-9][0-9]*){1,4}$/,message: 'must be positive integer',trigger: \"blur\"}\n        ],\n      }\n    }\n  },\n  methods: {\n    formatStorage(row){\n      let temp = this.storageData.find(item=>{\n        return item.id ==row.storage\n      })\n\n      return temp && temp.name\n    },\n    resetForm() {\n      this.$refs.form.resetFields();\n    },\n    handleSizeChange(val) {\n      console.log(`${val} items per page`);\n      this.pageNum=1\n      this.pageSize=val\n      this.loadPost()\n    },\n    handleCurrentChange(val) {\n      console.log(`current page: ${val}`);\n      this.pageNum=val\n      this.loadPost()\n    },\n    resetParam(){\n      this.name=''\n    },\n    add(){\n      this.centerDialogVisible=true;\n      this.$nextTick(()=>{\n        this.resetForm()\n        this.form.id=''\n      })\n    },\n    mod(row){\n      this.centerDialogVisible=true\n      this.$nextTick(()=>{\n        this.form.id=row.id\n        this.form.name=row.name\n        this.form.storage=row.storage\n        this.form.goodstype=row.goodstype\n        this.form.count=row.count\n        this.form.remark=row.remark\n      })\n    },\n    del(id){\n      this.$axios.get(this.$httpUrl+'/goods/del?id='+id).then(res=>res.data).then(res=>{\n        console.log(res)\n        if(res.code==200){\n\n          this.$message({\n            message: 'Delete Successed!',\n            type: 'success'\n          });\n          this.loadPost()\n        }else{\n          this.$message({\n            message: 'Operation Failed！',\n            type: 'error'\n          });\n        }\n\n      })\n    },\n    doSave(){\n      this.$axios.post(this.$httpUrl+'/goods/save',this.form).then(res=>res.data).then(res=>{\n        console.log(res)\n        if(res.code==200){\n\n          this.$message({\n            message: 'Save Successed!',\n            type: 'success'\n          });\n          this.centerDialogVisible = false\n          this.loadPost()\n          this. resetForm()\n        }else{\n          this.$message({\n            message: 'Operation Failed！',\n            type: 'error'\n          });\n        }\n\n      })\n    },\n    doMod(){\n      this.$axios.post(this.$httpUrl+'/goods/update',this.form).then(res=>res.data).then(res=>{\n        console.log(res)\n        if(res.code==200){\n\n          this.$message({\n            message: 'Save Successed!',\n            type: 'success'\n          });\n          this.centerDialogVisible = false\n          this.loadPost()\n          this. resetForm()\n        }else{\n          this.$message({\n            message: 'Operation Failed！',\n            type: 'error'\n          });\n        }\n\n      })\n    },\n    save(){\n      this.$refs.form.validate((valid) => {\n        if (valid) {\n          if(this.form.id){\n            this.doMod();\n          }else{\n            this.doSave();\n          }\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n\n    },\n    loadPost() {\n      this.$axios.post(this.$httpUrl+'/goods/listPageEn',{\n        pageSize: this.pageSize,\n        pageNum:this.pageNum,\n        param:{\n          name:this.name,//refer data里的name\n        }\n      }).then(res=>res.data).then(res=>{\n        console.log(res)\n        if(res.code==200){\n          this.tableData=res.data\n          this.total=res.total\n        }else{\n          alert(\"Resource Get Failed\")\n        }\n\n      })\n    },\n    loadStorage(){\n      this.$axios.get(this.$httpUrl+'/storage/list').then(res=>res.data).then(res=>{\n      console.log(res)\n      if(res.code==200){\n        this.storageData=res.data\n      }else{\n        alert(\"Resource Get Failed\")\n      }\n\n    })}\n  },\n\n  beforeMount() {\n    this.loadStorage()\n    this.loadPost()\n  }\n\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}