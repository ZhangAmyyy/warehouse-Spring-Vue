{"ast":null,"code":"import SelectUser from \"@/components/user/SelectUser\";\nexport default {\n  name: \"GoodsManagement\",\n  components: {\n    SelectUser\n  },\n  data() {\n    return {\n      user: JSON.parse(sessionStorage.getItem('CurUser')),\n      goodstypeData: [],\n      storageData: [],\n      storage: '',\n      goodstype: '',\n      tableData: [],\n      pageSize: 10,\n      pageNum: 1,\n      total: 0,\n      name: '',\n      //refer v-model里的name\n      centerDialogVisible: false,\n      inDialogVisible: false,\n      outDialogVisible: false,\n      innerVisible: false,\n      currentRow: {},\n      form: {\n        id: '',\n        name: '',\n        storage: '',\n        goodstype: '',\n        count: '',\n        remark: ''\n      },\n      form1: {\n        goods: '',\n        goodsname: '',\n        count: '',\n        userid: '',\n        username: '',\n        adminId: '',\n        remark: ''\n      },\n      form2: {\n        goods: '',\n        goodsname: '',\n        count: '',\n        userid: '',\n        adminId: '',\n        remark: ''\n      },\n      rules1: {},\n      rules2: {},\n      rules: {\n        name: [{\n          required: true,\n          message: 'Please input  item name',\n          trigger: 'blur'\n        }],\n        count: [{\n          required: true,\n          message: 'Please input volume',\n          trigger: 'blur'\n        }, {\n          pattern: /^([1-9][0-9]*){1,4}$/,\n          message: 'must be positive integer',\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  methods: {\n    formatStorage(row) {\n      let temp = this.storageData.find(item => {\n        return item.id == row.storage;\n      });\n      return temp && temp.name;\n    },\n    formatGoodsType(row) {\n      let temp = this.goodstypeData.find(item => {\n        // console.log(item.id)\n        // console.log(item.name)\n        console.log(row);\n        return item.id == row.goodstype;\n      });\n      // console.log(temp)\n      return temp && temp.name;\n    },\n    resetForm() {\n      this.$refs.form.resetFields();\n    },\n    resetInForm() {\n      this.$refs.form1.resetFields();\n    },\n    resetOutForm() {\n      this.$refs.form2.resetFields();\n    },\n    handleSizeChange(val) {\n      console.log(`${val} items per page`);\n      this.pageNum = 1;\n      this.pageSize = val;\n      this.loadPost();\n    },\n    handleCurrentChange(val) {\n      console.log(`current page: ${val}`);\n      this.pageNum = val;\n      this.loadPost();\n    },\n    selectCurrentChange(val) {\n      this.currentRow = val;\n    },\n    resetParam() {\n      this.name = '';\n      this.storage = '';\n      this.goodstype = '';\n    },\n    add() {\n      this.centerDialogVisible = true;\n      this.$nextTick(() => {\n        this.resetForm();\n        this.form.id = '';\n      });\n    },\n    Inbound() {\n      if (!this.currentRow.id) {\n        alert('Please select one item');\n        return;\n      }\n      this.inDialogVisible = true;\n      this.$nextTick(() => {\n        this.resetInForm();\n      });\n      this.form1.goodsname = this.currentRow.name;\n      this.form1.goods = this.currentRow.id;\n      this.form1.adminId = this.user.id;\n    },\n    selectUser() {\n      this.innerVisible = true;\n    },\n    confirmUser() {},\n    doInbound() {\n      this.$axios.post(this.$httpUrl + '/record/save', this.form1).then(res => res.data).then(res => {\n        console.log(res);\n        if (res.code == 200) {\n          this.$message({\n            message: 'Save Successed!',\n            type: 'success'\n          });\n          this.inDialogVisible = false;\n          this.loadPost();\n          this.resetForm();\n        } else {\n          this.$message({\n            message: 'Operation Failed！',\n            type: 'error'\n          });\n        }\n      });\n    },\n    Outbound() {\n      this.outDialogVisible = true;\n      this.$nextTick(() => {\n        this.resetOutForm();\n      });\n    },\n    mod(row) {\n      this.centerDialogVisible = true;\n      this.$nextTick(() => {\n        this.form.id = row.id;\n        this.form.name = row.name;\n        this.form.storage = row.storage;\n        this.form.goodstype = row.goodstype;\n        this.form.count = row.count;\n        this.form.remark = row.remark;\n      });\n    },\n    del(id) {\n      this.$axios.get(this.$httpUrl + '/goods/del?id=' + id).then(res => res.data).then(res => {\n        console.log(res);\n        if (res.code == 200) {\n          this.$message({\n            message: 'Delete Successed!',\n            type: 'success'\n          });\n          this.loadPost();\n        } else {\n          this.$message({\n            message: 'Operation Failed！',\n            type: 'error'\n          });\n        }\n      });\n    },\n    doSave() {\n      this.$axios.post(this.$httpUrl + '/goods/save', this.form).then(res => res.data).then(res => {\n        console.log(res);\n        if (res.code == 200) {\n          this.$message({\n            message: 'Save Successed!',\n            type: 'success'\n          });\n          this.centerDialogVisible = false;\n          this.loadPost();\n          this.resetForm();\n        } else {\n          this.$message({\n            message: 'Operation Failed！',\n            type: 'error'\n          });\n        }\n      });\n    },\n    doMod() {\n      this.$axios.post(this.$httpUrl + '/goods/update', this.form).then(res => res.data).then(res => {\n        console.log(res);\n        if (res.code == 200) {\n          this.$message({\n            message: 'Save Successed!',\n            type: 'success'\n          });\n          this.centerDialogVisible = false;\n          this.loadPost();\n          this.resetForm();\n        } else {\n          this.$message({\n            message: 'Operation Failed！',\n            type: 'error'\n          });\n        }\n      });\n    },\n    save() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          if (this.form.id) {\n            this.doMod();\n          } else {\n            this.doSave();\n          }\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    loadPost() {\n      this.$axios.post(this.$httpUrl + '/goods/listPageEn', {\n        pageSize: this.pageSize,\n        pageNum: this.pageNum,\n        param: {\n          name: this.name,\n          //refer data里的name\n          goodstype: this.goodstype + '',\n          storage: this.storage + ''\n        }\n      }).then(res => res.data).then(res => {\n        console.log(res);\n        if (res.code == 200) {\n          this.tableData = res.data;\n          this.total = res.total;\n        } else {\n          alert(\"Resource Get Failed\");\n        }\n      });\n    },\n    loadStorage() {\n      this.$axios.get(this.$httpUrl + '/storage/list').then(res => res.data).then(res => {\n        // console.log(\"storage\")\n        console.log(res);\n        if (res.code == 200) {\n          this.storageData = res.data;\n        } else {\n          alert(\"Resource Get Failed\");\n        }\n      });\n    },\n    loadGoodsType() {\n      this.$axios.get(this.$httpUrl + '/goodstype/list').then(res => res.data).then(res => {\n        console.log(res);\n        if (res.code == 200) {\n          this.goodstypeData = res.data;\n        } else {\n          alert(\"Resource Get Failed\");\n        }\n      });\n    }\n  },\n  beforeMount() {\n    this.loadStorage();\n    this.loadGoodsType();\n    this.loadPost();\n  }\n};","map":{"version":3,"mappings":"AAgMA;AACA;EACAA;EACAC;IAAAC;EAAA;EACAC;IAEA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAZ;MAAA;MACAa;MACAC;MACAC;MACAC;MACAC;MACAC;QACAC;QACAnB;QACAO;QACAC;QACAY;QACAC;MACA;MACAC;QACAC;QACAC;QACAJ;QACAK;QACAC;QACAC;QACAN;MACA;MACAO;QACAL;QACAC;QACAJ;QACAK;QACAE;QACAN;MACA;MACAQ,SAEA;MACAC,SAEA;MACAC;QACA/B,OACA;UAAAgC;UAAAC;UAAAC;QAAA,EACA;QACAd,QACA;UAAAY;UAAAC;UAAAC;QAAA,GACA;UAAAC;UAAAF;UAAAC;QAAA;MAEA;IACA;EACA;EACAE;IACAC;MACA;QACA;MACA;MAEA;IACA;IACAC;MACA;QACA;QACA;QACAC;QACA;MACA;MACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACAJ;MACA;MACA;MACA;IACA;IACAK;MACAL;MACA;MACA;IACA;IACAM;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;QACA;QACA;MACA;IACA;IACAC;MACA;QACAC;QACA;MACA;MAEA;MACA;QACA;MACA;MAEA;MACA;MACA;IACA;IACAC;MACA;IACA;IACAC,eAEA;IACAC;MACA;QACAb;QACA;UAEA;YACAN;YACAoB;UACA;UACA;UACA;UACA;QACA;UACA;YACApB;YACAoB;UACA;QACA;MAEA;IACA;IACAC;MACA;MACA;QACA;MACA;IACA;IACAC;MACA;MACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;IACA;IACAC;MACA;QACAjB;QACA;UAEA;YACAN;YACAoB;UACA;UACA;QACA;UACA;YACApB;YACAoB;UACA;QACA;MAEA;IACA;IACAI;MACA;QACAlB;QACA;UAEA;YACAN;YACAoB;UACA;UACA;UACA;UACA;QACA;UACA;YACApB;YACAoB;UACA;QACA;MAEA;IACA;IACAK;MACA;QACAnB;QACA;UAEA;YACAN;YACAoB;UACA;UACA;UACA;UACA;QACA;UACA;YACApB;YACAoB;UACA;QACA;MAEA;IACA;IACAM;MACA;QACA;UACA;YACA;UACA;YACA;UACA;QACA;UACApB;UACA;QACA;MACA;IAEA;IACAqB;MACA;QACAlD;QACAC;QACAkD;UACA7D;UAAA;UACAQ;UACAD;QACA;MACA;QACAgC;QACA;UACA;UACA;QACA;UACAU;QACA;MAEA;IACA;IACAa;MACA;QACA;QACAvB;QACA;UACA;QACA;UACAU;QACA;MAEA;IAAA;IACAc;MACA;QACAxB;QACA;UACA;QACA;UACAU;QACA;MAEA;IAAA;EACA;EAEAe;IACA;IACA;IACA;EACA;AAEA","names":["name","components","SelectUser","data","user","goodstypeData","storageData","storage","goodstype","tableData","pageSize","pageNum","total","centerDialogVisible","inDialogVisible","outDialogVisible","innerVisible","currentRow","form","id","count","remark","form1","goods","goodsname","userid","username","adminId","form2","rules1","rules2","rules","required","message","trigger","pattern","methods","formatStorage","formatGoodsType","console","resetForm","resetInForm","resetOutForm","handleSizeChange","handleCurrentChange","selectCurrentChange","resetParam","add","Inbound","alert","selectUser","confirmUser","doInbound","type","Outbound","mod","del","doSave","doMod","save","loadPost","param","loadStorage","loadGoodsType","beforeMount"],"sourceRoot":"src/components/goods","sources":["GoodsManagement.vue"],"sourcesContent":["<template>\n  <div>\n    <div style=\"margin-bottom: 10px;text-align: center\">\n      <el-input v-model=\"name\" placeholder=\"Please enter item name\" suffix-icon=\"el-icon-search\" style=\"width:200px\"\n                @keyup.enter.native=\"loadPost\"></el-input>\n\n      <el-select v-model=\"storage\" placeholder=\"Select warehouse\" style=\"margin-left: 5px;\">\n        <el-option\n            v-for=\"item in storageData\"\n            :key=\"item.id\"\n            :label=\"item.name\"\n            :value=\"item.id\">\n        </el-option>\n      </el-select>\n      <el-select v-model=\"goodstype\" placeholder=\"Select Classification\" style=\"margin-left: 5px;\">\n        <el-option\n            v-for=\"item in goodstypeData\"\n            :key=\"item.id\"\n            :label=\"item.name\"\n            :value=\"item.id\">\n        </el-option>\n      </el-select>\n\n\n      <el-button type=\"primary\" style=\"margin-left: 10px\" @click=\"loadPost\">Search</el-button>\n      <el-button type=\"success\" @click=\"resetParam\">Reset</el-button>\n\n      <el-button type=\"primary\" style=\"margin-left: 10px\" @click=\"add\">Add</el-button>\n      <el-button type=\"primary\" style=\"margin-left: 10px\" @click=\"Inbound\">Inbound</el-button>\n      <el-button type=\"primary\" style=\"margin-left: 10px\" @click=\"Outbound\">Outbound</el-button>\n\n\n    </div>\n    <el-table :data=\"tableData\"\n              :header-cell-style=\"{ background:'#f2f5f2', color:'#555555'}\"\n              border\n              highlight-current-row\n              @current-change=\"selectCurrentChange\"\n\n    >\n      <el-table-column prop=\"id\" label=\"ID\" width=\"200\">\n      </el-table-column>\n      <el-table-column prop=\"name\" label=\"Item Name\" width=\"280\">\n      </el-table-column>\n      <el-table-column prop=\"storage\" label=\"Warehouse\" width=\"280\" :formatter=\"formatStorage\">\n      </el-table-column>\n      <el-table-column prop=\"goodstype\" label=\"Classification\" width=\"280\" :formatter=\"formatGoodsType\">\n      </el-table-column>\n      <el-table-column prop=\"count\" label=\"Volume\" width=\"280\">\n      </el-table-column>\n      <el-table-column prop=\"remark\" label=\"remark\" width=\"500\">\n      </el-table-column>\n\n      <el-table-column prop=\"operate\" label=\"Operate\" width=\"200\">\n        <template slot-scope=\"scope\">\n          <el-button size=\"mini\" type=\"success\" @click=\"mod(scope.row)\"> Edit</el-button>\n          <el-popconfirm\n              title=\"Are you sure to delete this?\"\n              @confirm=\"del(scope.row.id)\"\n              style=\"margin-left: 5px\"\n          >\n            <!--              confirm 以后才调用del-->\n\n            <el-button slot=\"reference\" size=\"mini\" type=\"danger\" >Delete</el-button>\n          </el-popconfirm>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-pagination\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        :current-page=\"pageNum\"\n        :page-sizes=\"[5, 10, 20,30]\"\n        :page-size=\"pageSize\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\">\n    </el-pagination>\n\n    <el-dialog\n        title=\"Adding account\"\n        :visible.sync=\"centerDialogVisible\"\n        width=\"30%\"\n        center>\n      <el-form ref=\"form\" :rules=\"rules\" :model=\"form\" label-width=\"120px\">\n        <el-form-item label=\"Item Name\" prop=\"name\">\n          <el-input v-model=\"form.name\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Warehouse\" prop=\"name\">\n          <el-select v-model=\"storage\" placeholder=\"Select warehouse\" style=\"margin-left: 5px;\">\n            <el-option\n                v-for=\"item in storageData\"\n                :key=\"item.id\"\n                :label=\"item.name\"\n                :value=\"item.id\">\n            </el-option>\n          </el-select>\n\n        </el-form-item>\n        <el-form-item label=\"Classification\" prop=\"name\">\n          <el-select v-model=\"goodstype\" placeholder=\"Select Classification\" style=\"margin-left: 5px;\">\n            <el-option\n                v-for=\"item in goodstypeData\"\n                :key=\"item.id\"\n                :label=\"item.name\"\n                :value=\"item.id\">\n            </el-option>\n          </el-select>\n\n        </el-form-item>\n        <el-form-item label=\"volume\" prop=\"name\">\n          <el-input v-model=\"form.count\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"remark\" prop=\"remark\">\n          <el-input type=\"textarea\" v-model=\"form.remark\"></el-input>\n        </el-form-item>\n\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n    <el-button @click=\"centerDialogVisible = false\">Cancel</el-button>\n    <el-button type=\"primary\" @click=\"save\">Confirm</el-button>\n  </span>\n    </el-dialog>\n\n\n    <el-dialog\n        title=\"Inbound\"\n        :visible.sync=\"inDialogVisible\"\n        width=\"30%\"\n        center>\n\n      <el-dialog\n          width=\"75%\"\n          title=\"Select Applicant\"\n          :visible.sync=\"innerVisible\"\n          append-to-body>\n        <SelectUser></SelectUser>\n<!--        <SelectUser @doSelectUser=\"doSelectUser\"></SelectUser>-->\n        <span slot=\"footer\" class=\"dialog-footer\">\n                    <el-button @click=\"innerVisible = false\">Cancel</el-button>\n                    <el-button type=\"primary\" @click=\"confirmUser\">Confirm</el-button>\n                  </span>\n      </el-dialog>\n\n      <el-form ref=\"form1\" :rules=\"rules1\" :model=\"form1\" label-width=\"120px\">\n        <el-form-item label=\"Item Name\" >\n          <el-input v-model=\"form1.goodsname\" readonly></el-input>\n        </el-form-item>\n        <el-form-item label=\"Applicant\" >\n        <el-input v-model=\"form1.username\" readonly @click=\"selectUser\"></el-input>\n      </el-form-item>\n        <el-form-item label=\"volume\" prop=\"name\">\n          <el-input v-model=\"form1.count\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"remark\" prop=\"remark\">\n          <el-input type=\"textarea\" v-model=\"form1.remark\"></el-input>\n        </el-form-item>\n\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n    <el-button @click=\"inDialogVisible = false\">Cancel</el-button>\n    <el-button type=\"primary\" @click=\"doInbound\">Confirm</el-button>\n  </span>\n    </el-dialog>\n\n    <el-dialog\n        title=\"Inbound\"\n        :visible.sync=\"outDialogVisible\"\n        width=\"30%\"\n        center>\n      <el-form ref=\"form2\" :rules=\"rules2\" :model=\"form2\" label-width=\"120px\">\n        <el-form-item label=\"Item Name\" >\n          <el-input v-model=\"form2.goodsname\" readonly></el-input>\n        </el-form-item>\n        <el-form-item label=\"volume\" prop=\"name\">\n          <el-input v-model=\"form2.count\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"remark\" prop=\"remark\">\n          <el-input type=\"textarea\" v-model=\"form2.remark\"></el-input>\n        </el-form-item>\n\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n    <el-button @click=\"outDialogVisible = false\">Cancel</el-button>\n    <el-button type=\"primary\" @click=\"save\">Confirm</el-button>\n  </span>\n    </el-dialog>\n\n  </div>\n</template>\n\n\n<script>\nimport SelectUser from \"@/components/user/SelectUser\";\nexport default {\n  name: \"GoodsManagement\",\n  components: {SelectUser},\n  data() {\n\n    return{\n      user: JSON.parse(sessionStorage.getItem('CurUser')),\n      goodstypeData:[],\n      storageData:[],\n      storage: '',\n      goodstype: '',\n      tableData: [],\n      pageSize:10,\n      pageNum:1,\n      total:0,\n      name:'',//refer v-model里的name\n      centerDialogVisible:false,\n      inDialogVisible: false,\n      outDialogVisible:false,\n      innerVisible: false,\n      currentRow:{},\n      form:{\n        id:'',\n        name:'',\n        storage:'',\n        goodstype:'',\n        count:'',\n        remark:''\n      },\n      form1:{\n        goods:'',\n        goodsname:'',\n        count:'',\n        userid:'',\n        username:'',\n        adminId:'',\n        remark: ''\n      },\n      form2:{\n        goods:'',\n        goodsname:'',\n        count:'',\n        userid:'',\n        adminId:'',\n        remark: ''\n      },\n      rules1:{\n\n      },\n      rules2:{\n\n      },\n      rules: {\n        name: [\n          {required: true, message: 'Please input  item name', trigger: 'blur'},\n        ],\n        count: [\n          {required: true, message: 'Please input volume', trigger: 'blur'},\n          {pattern: /^([1-9][0-9]*){1,4}$/,message: 'must be positive integer',trigger: \"blur\"}\n        ],\n      }\n    }\n  },\n  methods: {\n    formatStorage(row){\n      let temp = this.storageData.find(item=>{\n        return item.id ==row.storage\n      })\n\n      return temp && temp.name\n    },\n    formatGoodsType(row){\n      let temp = this.goodstypeData.find(item=>{\n        // console.log(item.id)\n        // console.log(item.name)\n        console.log(row)\n        return item.id ==row.goodstype\n      })\n      // console.log(temp)\n      return temp && temp.name\n    },\n    resetForm() {\n      this.$refs.form.resetFields();\n    },\n    resetInForm() {\n      this.$refs.form1.resetFields();\n    },\n    resetOutForm() {\n      this.$refs.form2.resetFields();\n    },\n    handleSizeChange(val) {\n      console.log(`${val} items per page`);\n      this.pageNum=1\n      this.pageSize=val\n      this.loadPost()\n    },\n    handleCurrentChange(val) {\n      console.log(`current page: ${val}`);\n      this.pageNum=val\n      this.loadPost()\n    },\n    selectCurrentChange(val) {\n      this.currentRow = val;\n    },\n    resetParam(){\n      this.name=''\n      this.storage=''\n      this.goodstype=''\n    },\n    add(){\n      this.centerDialogVisible=true;\n      this.$nextTick(()=>{\n        this.resetForm()\n        this.form.id=''\n      })\n    },\n    Inbound(){\n      if(!this.currentRow.id){\n        alert('Please select one item')\n        return;\n      }\n\n      this.inDialogVisible=true;\n      this.$nextTick(()=>{\n        this.resetInForm()\n      })\n\n      this.form1.goodsname=this.currentRow.name\n      this.form1.goods=this.currentRow.id\n      this.form1.adminId=this.user.id\n    },\n    selectUser(){\n      this.innerVisible=true\n    },\n    confirmUser(){\n\n    },\n    doInbound(){\n      this.$axios.post(this.$httpUrl+'/record/save',this.form1).then(res=>res.data).then(res=>{\n        console.log(res)\n        if(res.code==200){\n\n          this.$message({\n            message: 'Save Successed!',\n            type: 'success'\n          });\n          this.inDialogVisible = false\n          this.loadPost()\n          this. resetForm()\n        }else{\n          this.$message({\n            message: 'Operation Failed！',\n            type: 'error'\n          });\n        }\n\n      })\n    },\n    Outbound(){\n      this.outDialogVisible=true;\n      this.$nextTick(()=>{\n        this.resetOutForm()\n      })\n    },\n    mod(row){\n      this.centerDialogVisible=true\n      this.$nextTick(()=>{\n        this.form.id=row.id\n        this.form.name=row.name\n        this.form.storage=row.storage\n        this.form.goodstype=row.goodstype\n        this.form.count=row.count\n        this.form.remark=row.remark\n      })\n    },\n    del(id){\n      this.$axios.get(this.$httpUrl+'/goods/del?id='+id).then(res=>res.data).then(res=>{\n        console.log(res)\n        if(res.code==200){\n\n          this.$message({\n            message: 'Delete Successed!',\n            type: 'success'\n          });\n          this.loadPost()\n        }else{\n          this.$message({\n            message: 'Operation Failed！',\n            type: 'error'\n          });\n        }\n\n      })\n    },\n    doSave(){\n      this.$axios.post(this.$httpUrl+'/goods/save',this.form).then(res=>res.data).then(res=>{\n        console.log(res)\n        if(res.code==200){\n\n          this.$message({\n            message: 'Save Successed!',\n            type: 'success'\n          });\n          this.centerDialogVisible = false\n          this.loadPost()\n          this. resetForm()\n        }else{\n          this.$message({\n            message: 'Operation Failed！',\n            type: 'error'\n          });\n        }\n\n      })\n    },\n    doMod(){\n      this.$axios.post(this.$httpUrl+'/goods/update',this.form).then(res=>res.data).then(res=>{\n        console.log(res)\n        if(res.code==200){\n\n          this.$message({\n            message: 'Save Successed!',\n            type: 'success'\n          });\n          this.centerDialogVisible = false\n          this.loadPost()\n          this. resetForm()\n        }else{\n          this.$message({\n            message: 'Operation Failed！',\n            type: 'error'\n          });\n        }\n\n      })\n    },\n    save(){\n      this.$refs.form.validate((valid) => {\n        if (valid) {\n          if(this.form.id){\n            this.doMod();\n          }else{\n            this.doSave();\n          }\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n\n    },\n    loadPost() {\n      this.$axios.post(this.$httpUrl+'/goods/listPageEn',{\n        pageSize: this.pageSize,\n        pageNum:this.pageNum,\n        param:{\n          name:this.name,//refer data里的name\n          goodstype: this.goodstype+'',\n          storage: this.storage+''\n        }\n      }).then(res=>res.data).then(res=>{\n        console.log(res)\n        if(res.code==200){\n          this.tableData=res.data\n          this.total=res.total\n        }else{\n          alert(\"Resource Get Failed\")\n        }\n\n      })\n    },\n    loadStorage(){\n      this.$axios.get(this.$httpUrl+'/storage/list').then(res=>res.data).then(res=>{\n        // console.log(\"storage\")\n      console.log(res)\n      if(res.code==200){\n        this.storageData=res.data\n      }else{\n        alert(\"Resource Get Failed\")\n      }\n\n    })},\n    loadGoodsType(){\n      this.$axios.get(this.$httpUrl+'/goodstype/list').then(res=>res.data).then(res=>{\n        console.log(res)\n        if(res.code==200){\n          this.goodstypeData=res.data\n        }else{\n          alert(\"Resource Get Failed\")\n        }\n\n      })},\n  },\n\n  beforeMount() {\n    this.loadStorage()\n    this.loadGoodsType()\n    this.loadPost()\n  }\n\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}